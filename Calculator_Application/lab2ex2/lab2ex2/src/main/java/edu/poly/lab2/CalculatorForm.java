/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package edu.poly.lab2;

import java.util.ArrayList;
import java.util.List;
import javax.swing.JOptionPane;

/**
 *
 * @author Nhật Long
 */
public class CalculatorForm extends javax.swing.JFrame {
    String operandl = ""; // Lưu trữ toán hạng thứ nhất
    String operator = ""; // Lưu trữ các toán như như +, -, *, /
    boolean isEqualsPress = false;
    List<String> history = new ArrayList<>(); // Lưu trữ lsu tính toán

    /**
     * Creates new form CalculatorForm
     */
    public CalculatorForm() {
        initComponents(); // Khởi tạo giao diện
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        txtResult = new javax.swing.JTextField();
        jPanel2 = new javax.swing.JPanel();
        btnNumber1 = new javax.swing.JButton();
        btnNumber2 = new javax.swing.JButton();
        btnNumber3 = new javax.swing.JButton();
        btnDevide = new javax.swing.JButton();
        btnSquareRoot = new javax.swing.JButton();
        btnPercentage = new javax.swing.JButton();
        btnNumber4 = new javax.swing.JButton();
        btnNumber5 = new javax.swing.JButton();
        btnNumber6 = new javax.swing.JButton();
        btnAdd = new javax.swing.JButton();
        btnSubtract = new javax.swing.JButton();
        btnEquals = new javax.swing.JButton();
        btnNumber7 = new javax.swing.JButton();
        btnNumber8 = new javax.swing.JButton();
        btnNumber9 = new javax.swing.JButton();
        btnPow = new javax.swing.JButton();
        btnFraction = new javax.swing.JButton();
        btnMultiply = new javax.swing.JButton();
        btnNumber0 = new javax.swing.JButton();
        btnPlus = new javax.swing.JButton();
        btnClear = new javax.swing.JButton();
        btnBackSP = new javax.swing.JButton();
        btnGiaiThua = new javax.swing.JButton();
        btnLogarit = new javax.swing.JButton();
        btnSin = new javax.swing.JButton();
        btnCos = new javax.swing.JButton();
        btnTan = new javax.swing.JButton();
        btnCot = new javax.swing.JButton();
        btnDoRadian = new javax.swing.JButton();
        txtHistory = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel1.setText("CALCULATOR");

        jPanel1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        txtResult.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        txtResult.setHorizontalAlignment(javax.swing.JTextField.RIGHT);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(txtResult)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(txtResult, javax.swing.GroupLayout.DEFAULT_SIZE, 27, Short.MAX_VALUE)
                .addContainerGap())
        );

        jPanel2.setLayout(new java.awt.GridLayout(4, 5, 5, 5));

        btnNumber1.setText("1");
        btnNumber1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNumber1ActionPerformed(evt);
            }
        });
        jPanel2.add(btnNumber1);

        btnNumber2.setText("2");
        btnNumber2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNumber2ActionPerformed(evt);
            }
        });
        jPanel2.add(btnNumber2);

        btnNumber3.setText("3");
        btnNumber3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNumber8ActionPerformed(evt);
            }
        });
        jPanel2.add(btnNumber3);

        btnDevide.setText("/");
        btnDevide.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnMultiply(evt);
            }
        });
        jPanel2.add(btnDevide);

        btnSquareRoot.setText("sqrt");
        btnSquareRoot.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSquareRootActionPerformed(evt);
            }
        });
        jPanel2.add(btnSquareRoot);

        btnPercentage.setText("%");
        btnPercentage.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSquareRootActionPerformed(evt);
            }
        });
        jPanel2.add(btnPercentage);

        btnNumber4.setText("4");
        btnNumber4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNumber8ActionPerformed(evt);
            }
        });
        jPanel2.add(btnNumber4);

        btnNumber5.setText("5");
        btnNumber5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNumber8ActionPerformed(evt);
            }
        });
        jPanel2.add(btnNumber5);

        btnNumber6.setText("6");
        btnNumber6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNumber8ActionPerformed(evt);
            }
        });
        jPanel2.add(btnNumber6);

        btnAdd.setText("+");
        btnAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnMultiply(evt);
            }
        });
        jPanel2.add(btnAdd);

        btnSubtract.setText("-");
        btnSubtract.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnMultiply(evt);
            }
        });
        jPanel2.add(btnSubtract);

        btnEquals.setText("=");
        btnEquals.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEqualsActionPerformed(evt);
            }
        });
        jPanel2.add(btnEquals);

        btnNumber7.setText("7");
        btnNumber7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNumber8ActionPerformed(evt);
            }
        });
        jPanel2.add(btnNumber7);

        btnNumber8.setText("8");
        btnNumber8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNumber8ActionPerformed(evt);
            }
        });
        jPanel2.add(btnNumber8);

        btnNumber9.setText("9");
        btnNumber9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNumber8ActionPerformed(evt);
            }
        });
        jPanel2.add(btnNumber9);

        btnPow.setText("x^y");
        btnPow.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPowActionPerformed(evt);
            }
        });
        jPanel2.add(btnPow);

        btnFraction.setText("1/x");
        btnFraction.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSquareRootActionPerformed(evt);
            }
        });
        jPanel2.add(btnFraction);

        btnMultiply.setText("*");
        btnMultiply.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnMultiplyActionPerformed(evt);
            }
        });
        jPanel2.add(btnMultiply);

        btnNumber0.setText("0");
        btnNumber0.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNumber8ActionPerformed(evt);
            }
        });
        jPanel2.add(btnNumber0);

        btnPlus.setText("+/-");
        btnPlus.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPlusActionPerformed(evt);
            }
        });
        jPanel2.add(btnPlus);

        btnClear.setText("C");
        btnClear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnClearActionPerformed(evt);
            }
        });
        jPanel2.add(btnClear);

        btnBackSP.setText("<-");
        btnBackSP.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackSPbtnSquareRootActionPerformed(evt);
            }
        });
        jPanel2.add(btnBackSP);

        btnGiaiThua.setText("N!");
        btnGiaiThua.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGiaiThuabtnSquareRootActionPerformed(evt);
            }
        });
        jPanel2.add(btnGiaiThua);

        btnLogarit.setText("LOG");
        btnLogarit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLogaritbtnSquareRootActionPerformed(evt);
            }
        });
        jPanel2.add(btnLogarit);

        btnSin.setText("SIN(X)");
        btnSin.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSinbtnSquareRootActionPerformed(evt);
            }
        });
        jPanel2.add(btnSin);

        btnCos.setText("COS(X)");
        btnCos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCosbtnSquareRootActionPerformed(evt);
            }
        });
        jPanel2.add(btnCos);

        btnTan.setText("TAN(X)");
        btnTan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTanbtnSquareRootActionPerformed(evt);
            }
        });
        jPanel2.add(btnTan);

        btnCot.setText("COT(X)");
        btnCot.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCotbtnSquareRootActionPerformed(evt);
            }
        });
        jPanel2.add(btnCot);

        btnDoRadian.setText("Đ <-> R");
        btnDoRadian.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDoRadianbtnSquareRootActionPerformed(evt);
            }
        });
        jPanel2.add(btnDoRadian);

        txtHistory.setHorizontalAlignment(javax.swing.JTextField.LEFT);
        txtHistory.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtHistory(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtHistory)
                    .addComponent(jPanel2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addGap(255, 255, 255)
                .addComponent(jLabel1)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addGap(11, 11, 11)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, 175, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtHistory, javax.swing.GroupLayout.DEFAULT_SIZE, 108, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnNumber2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNumber2ActionPerformed

        if (isEqualsPress) {
            isEqualsPress = false;
            txtResult.setText(""); 
        }
        String cmd = evt.getActionCommand();
        txtResult.setText(txtResult.getText() + cmd);
    }//GEN-LAST:event_btnNumber2ActionPerformed

    private void btnPlusActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPlusActionPerformed
        try {
            double value = Double.parseDouble(txtResult.getText());
            value = -value;
            txtResult.setText("" + value);
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(this, "Lỗi: Dữ liệu nhập vào không hợp lệ!", "Lỗi", JOptionPane.ERROR_MESSAGE);
        } catch (Exception e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_btnPlusActionPerformed

    private void btnMultiplyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnMultiplyActionPerformed
        String cmd = evt.getActionCommand();
        operator = cmd;
        operandl = txtResult.getText();
        txtResult.setText("");
    }//GEN-LAST:event_btnMultiplyActionPerformed

    private void btnNumber1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNumber1ActionPerformed
        String cmd = evt.getActionCommand();
        txtResult.setText(txtResult.getText() + cmd);
    }//GEN-LAST:event_btnNumber1ActionPerformed

    private void btnNumber8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNumber8ActionPerformed
        String cmd = evt.getActionCommand();
        txtResult.setText(txtResult.getText() + cmd);
    }//GEN-LAST:event_btnNumber8ActionPerformed

    private void btnMultiply(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnMultiply
        String cmd = evt.getActionCommand();
        operator = cmd;
        operandl = txtResult.getText();
        txtResult.setText("");
    }//GEN-LAST:event_btnMultiply

    private void btnEqualsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEqualsActionPerformed
        if (txtResult.getText().equals("") || operandl.equals("")) {
            return;
        }

        try {
            double oprand1 = Double.parseDouble(operandl);
            double oprand2 = Double.parseDouble(txtResult.getText());
            double result = 0;
            if (operator.equals("+")) {
                result = oprand1 + oprand2;
            } else if (operator.equals("-")) {
                result = oprand1 - oprand2;
            } else if (operator.equals("*")) {
                result = oprand1 * oprand2;
            } else if (operator.equals("/")) {
                if (oprand2 == 0) {
                    JOptionPane.showMessageDialog(this, "Lỗi: Ko thể chia cho 0", "Lỗi", JOptionPane.ERROR_MESSAGE);
                    return;
                }
                result = oprand1 / oprand2;
            } else if (operator.equals("^")) {
                result = Math.pow(oprand1, oprand2);
            }

            String historyEntry = operandl + " " + operator + " " + oprand2 + " = " + result;
            history.add(historyEntry);
            updateHistory();

            txtResult.setText("" + result);
            isEqualsPress = true;
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(this, "Lỗi: Dữ liệu nhập vào ko hợp lệ", "Lỗi", JOptionPane.ERROR_MESSAGE);
        } catch (Exception e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_btnEqualsActionPerformed

    private void btnClearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnClearActionPerformed
        txtResult.setText("");
        operandl = "";
        operator = "";
        isEqualsPress = false;
    }//GEN-LAST:event_btnClearActionPerformed

    private void btnSquareRootActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSquareRootActionPerformed
        if (txtResult.getText().equals("")) {
            return;
        }
        String cmd = evt.getActionCommand();
        try {
            double value = Double.parseDouble(txtResult.getText());

            if (cmd.equals("sqrt")) {
                if (value < 0) {
                    JOptionPane.showMessageDialog(this, "Lỗi: Ko thể tính căn bậc hai của số âm", "Lỗi", JOptionPane.ERROR_MESSAGE);
                    return;
                }
                value = Math.sqrt(value);
            } else if (cmd.equals("%")) {
                value = value / 100;
            } else if (cmd.equals("1/x")) {
                if (value == 0) {
                    JOptionPane.showMessageDialog(this, "Lỗi: Ko thể tính nghịch đảo của 0", "Lỗi", JOptionPane.ERROR_MESSAGE);
                    return;
                }
                value = 1 / value;
            }
            txtResult.setText("" + value);
            isEqualsPress = true;
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(this, "Lỗi: Dữ liệu nhập vào ko hợp lệ", "Lỗi", JOptionPane.ERROR_MESSAGE);
        } catch (Exception e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_btnSquareRootActionPerformed

    private void btnPowerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPowerActionPerformed
        operator = "^";
        operandl = txtResult.getText();
        txtResult.setText("");
    }//GEN-LAST:event_btnPowerActionPerformed

    private void btnBackspaceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackspaceActionPerformed
        String currentText = txtResult.getText();
        if (!currentText.isEmpty()) {
            txtResult.setText(currentText.substring(0, currentText.length() - 1));
        }
    }//GEN-LAST:event_btnBackspaceActionPerformed

    private void btnPowActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPowActionPerformed
        // TODO add your handling code here:
        operator = "^"; //Gán toán tử là phép lũy thừa 
        operandl = txtResult.getText(); // Lưu giá trị hiện tại từ ô kết quả làm toán hạng thứ nhất
        txtResult.setText(""); // Xóa ô kết quả để người dùng nhập toán hạng thứ hai
    }//GEN-LAST:event_btnPowActionPerformed

    private void btnBackSPbtnSquareRootActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackSPbtnSquareRootActionPerformed
        // TODO add your handling code here:
        String currentText = txtResult.getText(); // Lấy nội dung hiện tại trong ô kết quả
        if (!currentText.isEmpty()) { // Nếu ô không trống
           txtResult.setText(currentText.substring(0, currentText.length() - 1));
           // Cập nhật lại ô kết quả bằng cách xóa kí tự cuối cùng 
        }
    }//GEN-LAST:event_btnBackSPbtnSquareRootActionPerformed

    private void txtHistory(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtHistory
        // TODO add your handling code here:
        txtHistory.setEditable(false);
        // Đặt ô lịch sử chỉ để đọc, không cho người dùng nhập hay chính sửa
    }//GEN-LAST:event_txtHistory

    private void btnGiaiThuabtnSquareRootActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGiaiThuabtnSquareRootActionPerformed
        // TODO add your handling code here:
        try {
            double value = Double.parseDouble(txtResult.getText()); // Lấy giá trị từ ô kết quả
            if (value < 0 || value != (int) value) {
                // Giai thưa chỉ tính được cho số nguyên dương
                JOptionPane.showMessageDialog(this, "Lỗi: Giai thừa chỉ áp dụng cho số nguyên không âm!", "Lỗi", JOptionPane.ERROR_MESSAGE);
                return;
            }
            long result= 1; // Biến lưu kết quả giai thưa
            for (int i = 1; i <= (int) value; i++) {
                result *= i; // Nhân dần từ 1 đến value
            }
            txtResult.setText(String.valueOf(result)); // Hiển thị kêt quả lên ô kết quả
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(this, "Lỗi: Dữ liệu không hợp lệ!", "Lỗi", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_btnGiaiThuabtnSquareRootActionPerformed

    private void btnLogaritbtnSquareRootActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLogaritbtnSquareRootActionPerformed
        // TODO add your handling code here:
        try {
            double value = Double.parseDouble(txtResult.getText()); // Lấy số từ ô kết quả
            if (value <= 0) {
            // Logarit chỉ tính cho số > 0
                JOptionPane.showMessageDialog(this, "Lỗi: Logarit chỉ áp dụng cho số > 0!", "Lỗi", JOptionPane.ERROR_MESSAGE);
             return;
        }
        
        double logResult = Math.log10(value); // Tính log cơ số 10
        txtResult.setText(String.valueOf(logResult)); // Hiển thị kết quả
    } catch (NumberFormatException e) {
        JOptionPane.showMessageDialog(this, "Lỗi: Dữ liệu không hợp lệ!", "Lỗi", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_btnLogaritbtnSquareRootActionPerformed

    private void btnSinbtnSquareRootActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSinbtnSquareRootActionPerformed
        // TODO add your handling code here:
      try {
        double value = Double.parseDouble(txtResult.getText()); // Lấy giá trị góc (theo độ)
        double radians = Math.toRadians(value); // Đổi từ độ sang radian
        double sinValue = Math.sin(radians); // Tính sin
        txtResult.setText(String.valueOf(sinValue)); // Hiển thị kết quả
    } catch (NumberFormatException e) {
        JOptionPane.showMessageDialog(this, "Lỗi: Dữ liệu không hợp lệ!", "Lỗi", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_btnSinbtnSquareRootActionPerformed

    private void btnCosbtnSquareRootActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCosbtnSquareRootActionPerformed
        // TODO add your handling code here:
      try {
        double value = Double.parseDouble(txtResult.getText()); // Lấy giá trị góc (độ)
        double radians = Math.toRadians(value); // Đổi sang radian
        double cosValue = Math.cos(radians); // Tính cos
        txtResult.setText(String.valueOf(cosValue)); // Hiển thị
    } catch (NumberFormatException e) {
        JOptionPane.showMessageDialog(this, "Lỗi: Dữ liệu không hợp lệ!", "Lỗi", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_btnCosbtnSquareRootActionPerformed

    private void btnTanbtnSquareRootActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTanbtnSquareRootActionPerformed
        // TODO add your handling code here:
    try {
        double value = Double.parseDouble(txtResult.getText()); // Lấy góc (độ)
        double radians = Math.toRadians(value); // Đổi độ sang radian
        double tanValue = Math.tan(radians); // Tính tan
        txtResult.setText(String.valueOf(tanValue)); // Hiển thị kết quả
    } catch (NumberFormatException e) {
        JOptionPane.showMessageDialog(this, "Lỗi: Dữ liệu không hợp lệ!", "Lỗi", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_btnTanbtnSquareRootActionPerformed

    private void btnCotbtnSquareRootActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCotbtnSquareRootActionPerformed
        // TODO add your handling code here:
      try {
        double value = Double.parseDouble(txtResult.getText()); // Lấy giá trị góc (độ)
        double radians = Math.toRadians(value); // Chuyển đổi từ độ sang radian
        double tanValue = Math.tan(radians); // Tính tan(x)
        
        if (Math.abs(tanValue) < 1e-10) { 
            // Nếu tan(x) rất nhỏ gần 0 -> cot(x) không xác định
            JOptionPane.showMessageDialog(this, "Lỗi: Cot(x) không xác định tại góc này!", "Lỗi", JOptionPane.ERROR_MESSAGE);
            return;
        }
        
        double cotValue = 1.0 / tanValue; // Cot(x) = 1 / tan(x)
        txtResult.setText(String.valueOf(cotValue)); // Hiển thị kết quả
    } catch (NumberFormatException e) {
        JOptionPane.showMessageDialog(this, "Lỗi: Dữ liệu không hợp lệ!", "Lỗi", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_btnCotbtnSquareRootActionPerformed

    private void btnDoRadianbtnSquareRootActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDoRadianbtnSquareRootActionPerformed
        // TODO add your handling code here:
          try {
        double value = Double.parseDouble(txtResult.getText()); // Lấy giá trị hiện tại
        double radians = Math.toRadians(value); // Chuyển từ độ sang radian
        txtResult.setText(String.valueOf(radians)); // Hiển thị kết quả
    } catch (NumberFormatException e) {
        JOptionPane.showMessageDialog(this, "Lỗi: Dữ liệu không hợp lệ!", "Lỗi", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_btnDoRadianbtnSquareRootActionPerformed

    private void updateHistory() {
        StringBuilder historyText = new StringBuilder();
        for (String entry : history) {
            historyText.append(entry).append("\n");
        }
        txtHistory.setText(historyText.toString());
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(CalculatorForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(CalculatorForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(CalculatorForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(CalculatorForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new CalculatorForm().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAdd;
    private javax.swing.JButton btnBackSP;
    private javax.swing.JButton btnClear;
    private javax.swing.JButton btnCos;
    private javax.swing.JButton btnCot;
    private javax.swing.JButton btnDevide;
    private javax.swing.JButton btnDoRadian;
    private javax.swing.JButton btnEquals;
    private javax.swing.JButton btnFraction;
    private javax.swing.JButton btnGiaiThua;
    private javax.swing.JButton btnLogarit;
    private javax.swing.JButton btnMultiply;
    private javax.swing.JButton btnNumber0;
    private javax.swing.JButton btnNumber1;
    private javax.swing.JButton btnNumber2;
    private javax.swing.JButton btnNumber3;
    private javax.swing.JButton btnNumber4;
    private javax.swing.JButton btnNumber5;
    private javax.swing.JButton btnNumber6;
    private javax.swing.JButton btnNumber7;
    private javax.swing.JButton btnNumber8;
    private javax.swing.JButton btnNumber9;
    private javax.swing.JButton btnPercentage;
    private javax.swing.JButton btnPlus;
    private javax.swing.JButton btnPow;
    private javax.swing.JButton btnSin;
    private javax.swing.JButton btnSquareRoot;
    private javax.swing.JButton btnSubtract;
    private javax.swing.JButton btnTan;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JTextField txtHistory;
    private javax.swing.JTextField txtResult;
    // End of variables declaration//GEN-END:variables
}